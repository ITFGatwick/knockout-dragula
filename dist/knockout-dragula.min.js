!function(e,t){if("function"==typeof define&&define.amd)define(["exports","knockout","dragula"],t);else if("undefined"!=typeof exports)t(exports,require("knockout"),require("dragula"));else{var a={exports:{}};t(a.exports,e.ko,e.dragula),e.knockoutDragula=a.exports}}(this,function(e,t,a){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function d(e){var t=i["default"].utils.unwrapObservable(e())||{},a={data:t.data||e()};return s.forEach(function(e){t.hasOwnProperty(e)&&(a[e]=t[e])}),a}function o(e){var t=l["default"]([e]);t.on("drop",r),i["default"].utils.domData.set(e,c,t),i["default"].utils.domNodeDisposal.addDisposeCallback(e,function(){t.destroy()})}function r(e,t,a){var n=i["default"].dataFor(e),d=i["default"].utils.domData.get(a,f),o=d.indexOf(n),r=i["default"].utils.domData.get(t,f),u=Array.prototype.indexOf.call(t.children,e);e.remove(),d.splice(o,1),r.splice(u,0,n)}function u(e,t){var a=i["default"].utils.domData.get(e,c);a&&(a.containers.push(t),i["default"].utils.domNodeDisposal.addDisposeCallback(t,function(){var e=a.containers.indexOf(t);a.containers.splice(e,1)}))}var i=n(t),l=n(a),s=["afterAdd","afterRender","as","beforeRemove","includeDestroyed"],f="ko_dragula_list",c="ko_dragula_drake";i["default"].bindingHandlers.dragula={init:function(e,t,a,n,r){var l=i["default"].utils.unwrapObservable(t())||{},s=d(t);return i["default"].utils.domData.set(e,f,s.data),i["default"].bindingHandlers.foreach.init(e,function(){return s},a,n,r),l.linkTo?u(l.linkTo,e):o(e),{controlsDescendantBindings:!0}},update:function(e,t,a,n,o){var r=d(t);i["default"].utils.domData.set(e,f,r.data),i["default"].bindingHandlers.foreach.update(e,function(){return r},a,n,o)}}});